<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panelPlatno.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>